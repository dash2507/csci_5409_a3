{"ast":null,"code":"var _jsxFileName = \"/home/darshan/cloud_computing/assignment_3/book_search/src/App.js\";\nimport React, { useState } from 'react';\nimport { Container, Segment, Grid, Button, Form, Divider, Header } from 'semantic-ui-react';\n/**\n * (^([\\w,.-]+\\s)+(\\s)+\\d{5})+\\s+^((\\s\\[.+\\])\\s)*\n */\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [status, setStatus] = useState('');\n  const [noteStatus, setNoteStatus] = useState('');\n\n  const handleSearchChange = e => {\n    if (status !== '') {\n      setStatus('');\n    }\n\n    setQuery(e.target.value);\n  };\n\n  function clickSearch() {\n    fetch(\"http://127.0.0.1:5000/search?query=\" + query).then(response => response.json()).then(data => {\n      if (data.code === 0) {\n        setStatus(\"No Record Found\");\n      } else {\n        setStatus('Author: ' + data.Author);\n      }\n    });\n  }\n\n  function clickNotes() {\n    fetch(\"http://127.0.0.1:5000/notes?query=\" + query).then(response => response.json()).then(data => {\n      if (data.code === 0) {\n        setStatus(\"No Notes Found\");\n      } else {\n        setStatus('Author: ' + data.Author);\n      }\n    });\n  }\n\n  return React.createElement(Container, {\n    style: {\n      margin: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 2,\n    relaxed: \"very\",\n    stackable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    icon: \"search\",\n    iconPosition: \"left\",\n    placeholder: \"Search\",\n    value: query,\n    onChange: handleSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Search\",\n    primary: true,\n    onClick: () => clickSearch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Button, {\n    content: \"Notes\",\n    primary: true,\n    onClick: () => clickNotes(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, status)), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, noteStatus))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.TextArea, {\n    id: \"form-note\",\n    placeholder: \"Notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Notes\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/darshan/cloud_computing/assignment_3/book_search/src/App.js"],"names":["React","useState","Container","Segment","Grid","Button","Form","Divider","Header","App","query","setQuery","status","setStatus","noteStatus","setNoteStatus","handleSearchChange","e","target","value","clickSearch","fetch","then","response","json","data","code","Author","clickNotes","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Segment, Grid, Button, Form, Divider, Header } from 'semantic-ui-react'\n\n/**\n * (^([\\w,.-]+\\s)+(\\s)+\\d{5})+\\s+^((\\s\\[.+\\])\\s)*\n */\n\nfunction App() {\n  const [query, setQuery] = useState(\"\")\n  const [status, setStatus] = useState('')\n  const [noteStatus, setNoteStatus] = useState('')\n  const handleSearchChange = (e) => {\n    if (status !== ''){\n      setStatus('')\n    }\n    setQuery(e.target.value)\n\n  }\n  function clickSearch() {\n    fetch(\"http://127.0.0.1:5000/search?query=\" + query)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 0) {\n          setStatus(\"No Record Found\")\n        } else {\n          setStatus('Author: ' + data.Author)\n        }\n      })\n  }\n  function clickNotes() {\n    fetch(\"http://127.0.0.1:5000/notes?query=\" + query)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 0) {\n          setStatus(\"No Notes Found\")\n        } else {\n          setStatus('Author: ' + data.Author)\n        }\n      })\n  }\n  return (\n    <Container style={{ margin: 20 }}>\n      <Segment>\n        <Grid columns={2} relaxed=\"very\" stackable>\n          <Grid.Row>\n            <Grid.Column>\n              <Form>\n                <Form.Input\n                  icon='search'\n                  iconPosition='left'\n                  placeholder='Search'\n                  value={query}\n                  onChange={handleSearchChange}\n                />\n              </Form>\n            </Grid.Column>\n            <Grid.Column verticalAlign='middle'>\n              <Button content=\"Search\" primary onClick={() => clickSearch()} />\n              <Button content=\"Notes\" primary onClick={() => clickNotes()}/>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Header size=\"small\">{status}</Header>\n            </Grid.Column>\n            <Grid.Column>\n              <Header size=\"small\">{noteStatus}</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.TextArea\n                id='form-note'\n                placeholder='Notes'\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <Button content=\"Notes\" primary />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}