{"ast":null,"code":"var _jsxFileName = \"/home/darshan/cloud_computing/assignment_3/book_search/src/App.js\";\nimport React, { useState } from \"react\";\nimport { Container, Segment, Grid, Button, Form, Divider, Header } from \"semantic-ui-react\";\n/**\n * (^([\\w,.-]+\\s)+(\\s)+\\d{5})+\\s+^((\\s\\[.+\\])\\s)*\n */\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [queryStatus, setStatus] = useState(\"\");\n  const [queryCode, setQueryCode] = useState(false);\n  const [noteStatus, setNoteStatus] = useState(\"\");\n  const [notesText, setNoteText] = useState(\"\");\n\n  const handleSearchChange = e => {\n    if (queryStatus !== \"\" || noteStatus !== \"\") {\n      setStatus(\"\");\n      setNoteStatus(\"\");\n    }\n\n    setQuery(e.target.value);\n  };\n\n  function clickSearch() {\n    fetch(\"http://127.0.0.1:5000/search?query=\" + query).then(response => response.json()).then(data => {\n      if (data.code === 0) {\n        setStatus(\"No Record Found\");\n      } else {\n        setStatus(\"Author: \" + data.Author);\n        setQueryCode(true);\n      }\n    });\n  }\n\n  function clickNotes() {\n    if (queryCode) {\n      fetch(\"http://127.0.0.1:5000/notes?keyword=\" + query).then(response => response.json()).then(data => {\n        if (data.code === 0) {\n          setNoteStatus(\"No Notes Found\");\n        } else {\n          setNoteText(data.notes.join(\"\\n\\n\"));\n        }\n      });\n    }\n  }\n\n  function submitNotes() {\n    notesText.split(\"\\n\\n\").forEach(note => {\n      fetch(\"http://127.0.0.1:5000/add_notes?keyword=\" + query + \"&note=\" + note).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    });\n  }\n\n  return React.createElement(Container, {\n    style: {\n      margin: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 2,\n    relaxed: \"very\",\n    stackable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    icon: \"search\",\n    iconPosition: \"left\",\n    placeholder: \"Search\",\n    value: query,\n    onChange: handleSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Search\",\n    primary: true,\n    onClick: () => clickSearch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Button, {\n    content: \"List Notes\",\n    primary: true,\n    onClick: () => clickNotes(),\n    disabled: !queryCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, queryStatus)), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, noteStatus))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Form.TextArea, {\n    id: \"form-note\",\n    placeholder: \"Notes\",\n    value: notesText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Submit Notes\",\n    onClick: () => submitNotes(),\n    primary: true,\n    disabled: !queryCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/darshan/cloud_computing/assignment_3/book_search/src/App.js"],"names":["React","useState","Container","Segment","Grid","Button","Form","Divider","Header","App","query","setQuery","queryStatus","setStatus","queryCode","setQueryCode","noteStatus","setNoteStatus","notesText","setNoteText","handleSearchChange","e","target","value","clickSearch","fetch","then","response","json","data","code","Author","clickNotes","notes","join","submitNotes","split","forEach","note","console","log","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Segment,\n  Grid,\n  Button,\n  Form,\n  Divider,\n  Header\n} from \"semantic-ui-react\";\n\n/**\n * (^([\\w,.-]+\\s)+(\\s)+\\d{5})+\\s+^((\\s\\[.+\\])\\s)*\n */\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [queryStatus, setStatus] = useState(\"\");\n  const [queryCode, setQueryCode] = useState(false);\n  const [noteStatus, setNoteStatus] = useState(\"\");\n  const [notesText, setNoteText] = useState(\"\");\n  const handleSearchChange = e => {\n    if (queryStatus !== \"\" || noteStatus !== \"\") {\n      setStatus(\"\");\n      setNoteStatus(\"\");\n    }\n    setQuery(e.target.value);\n  };\n  function clickSearch() {\n    fetch(\"http://127.0.0.1:5000/search?query=\" + query)\n      .then(response => response.json())\n      .then(data => {\n        if (data.code === 0) {\n          setStatus(\"No Record Found\");\n        } else {\n          setStatus(\"Author: \" + data.Author);\n          setQueryCode(true);\n        }\n      });\n  }\n  function clickNotes() {\n    if (queryCode) {\n      fetch(\"http://127.0.0.1:5000/notes?keyword=\" + query)\n        .then(response => response.json())\n        .then(data => {\n          if (data.code === 0) {\n            setNoteStatus(\"No Notes Found\");\n          } else {\n            setNoteText(data.notes.join(\"\\n\\n\"));\n          }\n        });\n    }\n  }\n  function submitNotes() {\n    notesText.split(\"\\n\\n\").forEach(note => {\n      fetch(\"http://127.0.0.1:5000/add_notes?keyword=\"+query+\"&note=\"+note)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          \n        });\n    });\n  }\n  return (\n    <Container style={{ margin: 20 }}>\n      <Segment>\n        <Grid columns={2} relaxed=\"very\" stackable>\n          <Grid.Row>\n            <Grid.Column>\n              <Form>\n                <Form.Input\n                  icon=\"search\"\n                  iconPosition=\"left\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={handleSearchChange}\n                />\n              </Form>\n            </Grid.Column>\n            <Grid.Column verticalAlign=\"middle\">\n              <Button content=\"Search\" primary onClick={() => clickSearch()} />\n              <Button\n                content=\"List Notes\"\n                primary\n                onClick={() => clickNotes()}\n                disabled={!queryCode}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Header size=\"small\">{queryStatus}</Header>\n            </Grid.Column>\n            <Grid.Column>\n              <Header size=\"small\">{noteStatus}</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Form.TextArea\n                id=\"form-note\"\n                placeholder=\"Notes\"\n                value={notesText}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <Button\n                content=\"Submit Notes\"\n                onClick={() => submitNotes()}\n                primary\n                disabled={!queryCode}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}